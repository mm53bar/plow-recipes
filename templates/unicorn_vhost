upstream app_server {
  server unix:/srv/<%= config["app_name"] %>/tmp/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  listen 443 ssl;
  server_name <%= config["host"] %>;

  ssl_certificate      /etc/ssl/<%= config["app_name"] %>.crt;
  ssl_certificate_key  /etc/ssl/<%= config["app_name"] %>.key;
    
  rewrite ^(.*)$ $scheme://www.<%= config["host"] %>$1 permanent;
}

server {
  listen 80;
  server_name www.<%= config["host"] %> <%= config["hostname"] %>;

  client_max_body_size 4G;

  access_log /srv/<%= config["app_name"] %>/log/access.log;
  error_log /srv/<%= config["app_name"] %>/log/error.log;

  root /srv/<%= config["app_name"] %>/public/;

  try_files $uri/index.html $uri.html $uri @app;
  error_page 502 503 =503                  @maintenance;
  error_page 500 504 =500                  @server_error;

  location @app {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    # enable this if and only if you use HTTPS, this helps Rack
    # set the proper protocol for doing redirects:
    # proxy_set_header X-Forwarded-Proto https;

    proxy_pass http://app_server;
  }

  location @maintenance {
    root /srv/<%= config["app_name"] %>/public;
    try_files /503.html =503;
  }

  location @server_error {
    root /srv/<%= config["app_name"] %>/public;
    try_files /500.html =500;
  }

  location = /favicon.ico {
    expires    max;
    add_header Cache-Control public;
  }
}

server {
  listen 443;
  server_name www.<%= config["host"] %> <%= config["hostname"] %>;
  ssl on;

  ssl_certificate      /etc/ssl/<%= config["app_name"] %>.crt;
  ssl_certificate_key  /etc/ssl/<%= config["app_name"] %>.key;

  client_max_body_size 4G;

  access_log /srv/<%= config["app_name"] %>/log/access.log;
  error_log /srv/<%= config["app_name"] %>/log/error.log;

  root /srv/<%= config["app_name"] %>/public/;

  try_files $uri/index.html $uri.html $uri @app;
  error_page 502 503 =503                  @maintenance;
  error_page 500 504 =500                  @server_error;

  location @app {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    # enable this if and only if you use HTTPS, this helps Rack
    # set the proper protocol for doing redirects:
    proxy_set_header X-Forwarded-Proto https;

    proxy_pass http://app_server;
  }

  location @maintenance {
    root /srv/<%= config["app_name"] %>/public;
    try_files /503.html =503;
  }

  location @server_error {
    root /srv/<%= config["app_name"] %>/public;
    try_files /500.html =500;
  }

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location = /favicon.ico {
    expires    max;
    add_header Cache-Control public;
  }
}

server {
  listen 80;
  server_name assets.<%= config["host"] %>;

  root /srv/<%= config["app_name"] %>/public/;

  access_log /srv/<%= config["app_name"] %>/log/access-assets.log;
  error_log /srv/<%= config["app_name"] %>/log/error-assets.log;

  location / {
    deny all;
  }

  location ^~ /assets/ {
    allow all;
    gzip_http_version 1.0;
    gzip_static  on;
    expires      365d;
    add_header   Last-Modified "";
    add_header   Cache-Control public;
  }
}
